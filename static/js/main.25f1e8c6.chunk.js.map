{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","map","stat","label","percentage","id","FriendlistItem","isOnline","width","FriendList","friends","toString","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25f1e8c6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Profile.css\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className=\"profile\">\n    <div className=\"description\">\n      <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n      <p className=\"name\">{name}</p>\n      <p className=\"tag\">[{tag}]</p>\n      <p className=\"location\">{location}</p>\n    </div>\n\n    <ul className=\"stats\">\n      <li>\n        <span className=\"label\">Followers</span>\n        <span className=\"quantity\">{stats.followers}</span>\n      </li>\n      <li>\n        <span className=\"label\">Views</span>\n        <span className=\"quantity\">{stats.views}</span>\n      </li>\n      <li>\n        <span className=\"label\">Likes</span>\n        <span className=\"quantity\">{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Statistics.css\";\n\nconst Statistics = ({ title, stats }) => (\n  <section className=\"statistics\">\n    {title && <h2 className=\"title\">{title}</h2>}\n\n    <ul className=\"stat-list\">\n      {stats.map((stat) => (\n        <li className=\"item\" key={stat.id}>\n          <span className=\"label\">{stat.label}</span>\n          <span className=\"percentage\">{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import React from \"react\";\n// import PropTypes from 'prop-types';\n\nconst FriendlistItem = ({ avatar, name, isOnline }) => (\n  <li className={isOnline ? \"item online\" : \"item offline\"}>\n    <span className=\"status\">{}</span>\n    <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\n    <p className=\"name\">{name}</p>\n  </li>\n);\n\nexport default FriendlistItem;\n","import React from \"react\";\nimport FriendlistItem from \"./FriendListItem\";\nimport PropTypes from \"prop-types\";\n\nconst FriendList = ({ friends }) => (\n  <ul className=\"friend-list\">\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <FriendlistItem\n        avatar={avatar}\n        name={name}\n        isOnline={isOnline}\n        key={id.toString()}\n      />\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({ items }) => (\n  <table className=\"transaction-history\">\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./components/Profile/user.json\";\n\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\n\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./components/FriendList/friends.json\";\n\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Домашнее задание №1</h1>\n\n      <h2>Задание 1 - Профиль социальной сети</h2>\n\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <h2>Задание 2 - Секция статистики</h2>\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <Statistics stats={statisticalData} />\n\n      <h2>Задание 3 - Список друзей</h2>\n\n      <FriendList friends={friends} />\n\n      <h2>Задание 4 - История транзакций</h2>\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}